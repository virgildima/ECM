CREATE TABLE UserList(
UserID VARCHAR(32),
Email VARCHAR(32),
Password VARCHAR(32),
Admin CHAR(1),
PRIMARY KEY(UserID)
);

CREATE TABLE ConferenceList(
ConferenceID VARCHAR(32),
ChairID VARCHAR(32),
EndDate DATE,
PRIMARY KEY(ConferenceID),
FOREIGN KEY(ChairID) REFERENCES UserList(UserID)
);

CREATE TABLE Deadlines(
ConferenceID VARCHAR(32),
UploadDate DATE,
ReviewDate DATE,
PRIMARY KEY(ConferenceID),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceList(ConferenceID)
);

CREATE TABLE ConferenceTagList(
ConferenceID VARCHAR(32),
Tag VARCHAR(16),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceList(ConferenceID)
);

CREATE TABLE ConferenceMemberList(
ConferenceID VARCHAR(32),
UserID VARCHAR(32),
Author CHAR(1),
Reviewer CHAR(1),
Chair CHAR(1),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceList(ConferenceID),
FOREIGN KEY(UserID) REFERENCES UserList(UserID)
);

CREATE TABLE ReviewerExpertiese(
ConferenceID VARCHAR(32),
UserID VARCHAR(32),
Tag VARCHAR(32),
Expertiese CHAR(1),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceList(ConferenceID),
FOREIGN KEY(UserID) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE DocumentStorage(
DocumentID CHAR(5),
DocumentTitle VARCHAR(32),
ConferenceID VARCHAR(32),
AuthorID VARCHAR(32),
ChairID VARCHAR(32),
DocumentLocation VARCHAR(64),
AverageScore CHAR(1),
PRIMARY KEY(DocumentID),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceList(ConferenceID),
FOREIGN KEY(AuthorID) REFERENCES ConferenceMemberList(UserID),
FOREIGN KEY(ChairID) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE DocumentTags(
DocumentID VARCHAR(32),
Tag VARCHAR(16),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID)
);

CREATE TABLE DocumentReviewer(
DocumentID VARCHAR(32),
ReviewerID VARCHAR(32),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID),
FOREIGN KEY(ReviewerID) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE ReviewStorage(
ReviewID CHAR(5),
DocumentID CHAR(5),
ReviewerID VARCHAR(32),
DateOfPost DATE,
TimeOfPost TIME,
Review VARCHAR(8192),
Score CHAR(1),
Expertiese CHAR(1),
PRIMARY KEY(ReviewID),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID),
FOREIGN KEY(ReviewerID) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE CommentStorage(
CommentID CHAR(5),
ReviewID CHAR(5),
DocumentID CHAR(5),
UserID VARCHAR(32),
DateOfPost DATE,
TimeOfPost TIME,
Comment VARCHAR(8192),
PRIMARY KEY(CommentID),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID),
FOREIGN KEY(UserID) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE ChatStorage(
ChatID CHAR(5),
DocumentID CHAR(5),
UserID VARCHAR(32),
DateOfPost DATE,
TimeOfPost TIME,
Chat VARCHAR(8192),
PRIMARY KEY(ChatID),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID),
FOREIGN KEY(UserID) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE Conflict(
ConferenceID VARCHAR(32),
Declarer VARCHAR(32),
Accused VARCHAR(32),
Reason VARCHAR(8192),
Resolved CHAR(1),
Action VARCHAR(8192),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceList(ConferenceID),
FOREIGN KEY(Declarer) REFERENCES ConferenceMemberList(UserID),
FOREIGN KEY (Accused) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE Preferences(
ReviewerID VARCHAR(32),
DocumentID CHAR(5),
FOREIGN KEY(ReviewerID) REFERENCES ConferenceMemberList(UserID),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID)
);