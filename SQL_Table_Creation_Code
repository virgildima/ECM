CREATE TABLE UserList(
UserID CHAR(5),
Username VARCHAR(32),
Email VARCHAR(32),
Password VARCHAR(32),
Admin BOOLEAN(),
PRIMARY KEY(UserID)
);

CREATE TABLE ConferenceList(
ConferenceID CHAR(5),
ConferenceName VARCHAR(32),
ChairID CHAR(5),
EndDate DATE(),
PRIMARY KEY(ConferenceID),
FOREIGN KEY(ChairID) REFERENCES UserList(UserID)
);

CREATE TABLE Deadlines(
ConferenceID CHAR(5),
UploadDate DATE(),
ReviewDate DATE(),
PRIMARY KEY(ConferenceID),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceList(ConferenceID)
);

CREATE TABLE ConferenceTagList(
ConferenceID CHAR(5),
Tag VARCHAR(16),
PRIMARY KEY(ConferenceID),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceList(ConferenceID)
);

CREATE TABLE ConferenceMemberList(
ConferenceID CHAR(5),
UserID CHAR(5),
Author BOOLEAN(),
Reviewer BOOLEAN(),
Chair BOOLEAN(),
PRIMARY KEY(ConferenceID, UserID),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceLIst(ConferenceID),
FOREIGN KEY(UserID) REFERENCES UserList(UserID)
);

CREATE TABLE ReviewerExpertiese(
ConferenceID CHAR(5),
UserID CHAR(5),
Tag VARCHAR(32),
Expertiese CHAR(1),
FOREIGN KEY(ConferenceID) REFERENCES ConferenceList(ConferenceID),
FOREIGN KEY(UserID) REFERENCES ConferenceMEmberList(UserID)
);

CREATE TABLE DocumentStorage(
DocumentID CHAR(5),
DocumentTitle VARCHAR(32),
ConferenceID CHAR(5),
AuthorID CHAR(5),
ChairID CHAR(5),
DocumentLocation VARCHAR(64),
AverageScore CHAR(1),
PRIMARY KEY(DocumentID, ConferenceID)
);

CREATE TABLE DocumentTags(
DocumentID CHAR(5),
Tag VARCHAR(16),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID),
FOREIGN KEY(Tag) REFERENCES ConferenceTagList(Tag)
);

CREATE TABLE DocumentReviewer(
DocumentID CHAR(5),
ReviewID CHAR(5),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID),
FOREIGN KEY(ReviewID) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE ReviewStorage(
ReviewID CHAR(5),
DocumentID CHAR(5),
ReviewerID CHAR(5),
DateOfPost DATE(),
TimeOfPost TIME(),
Review VARCHAR(8192),
Score CHAR(1),
Expertiese CHAR(1)
PRIMARY KEY(ReviewID),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID),
FOREIGN KEY(ReviewerID) REFERENCES ConferenceMemberList(UserID),
FOREIGN KEY(Expertiese) REFERENCES ReviewerExpertiese(Expertiese)
);

CREATE TABLE CommentStorage(
CommentID CHAR(5),
ReviewID CHAR(5),
DocumentID CHAR(5),
UserID CHAR(5),
DateOfPost DATE(),
TimeOfPost TIME(),
Comment VARCHAR(8192),
PRIMARY KEY(CommentID),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID),
FOREIGN KEY(UserID) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE ChatStorage(
ChatID CHAR(5),
DocumentID CHAR(5),
UserID CHAR(5),
DateOfPost DATE(),
TimeOfPost TIME(),
Chat VARCHAR(8192),
PRIMARY KEY(ChatID),
FOREIGN KEY(DocumentID) REFERENCES DocumentStorage(DocumentID),
FOREIGN KEY(UserID) REFERENCES ConferenceMemberList(UserID)
);

CREATE TABLE Conflict(
ConferenceID CHAR(5),
Declarer CHAR(5),
Accused CHAR(5),
Reason VARCHAR(8192),
Resolved BOOLEAN(),
Action VARCHAR(8192),
FOREIGN KEY(COnferenceID) REFERENCES ConferenceList(ConferenceID),
FOREIGN KEY(Declarer, Accused) REFERENCES ConferenceMemberList(UserID, UserID)
);