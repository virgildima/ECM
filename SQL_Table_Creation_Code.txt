CREATE TABLE IF NOT EXISTS `user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(255) COLLATE utf8_unicode_ci NOT NULL UNIQUE KEY,
  `email` varchar(255) COLLATE utf8_unicode_ci NOT NULL UNIQUE KEY,
  `enabled` tinyint(1) NOT NULL,
  `password` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  `last_login` datetime DEFAULT NULL,
  `roles` longtext COLLATE utf8_unicode_ci NOT NULL COMMENT '(DC2Type:array)',
  `real_name` varchar(255) COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`id`)
);

CREATE TABLE ConferenceList(
Conference VARCHAR(32),
Chair int(11),
EndDate DATE,
PRIMARY KEY(Conference),
FOREIGN KEY(Chair) REFERENCES user(id)
);

CREATE TABLE Deadlines(
Conference VARCHAR(32),
UploadDate DATE,
ReviewDate DATE,
PRIMARY KEY(Conference),
FOREIGN KEY(Conference) REFERENCES ConferenceList(Conference)
);

CREATE TABLE ConferenceTagList(
Conference VARCHAR(32),
Tag VARCHAR(16),
FOREIGN KEY(Conference) REFERENCES ConferenceList(Conference)
);

CREATE TABLE ConferenceMemberList(
Conference VARCHAR(32),
id int(11),
Author CHAR(1),
Reviewer CHAR(1),
Chair CHAR(1),
FOREIGN KEY(Conference) REFERENCES ConferenceList(Conference),
FOREIGN KEY(id) REFERENCES user(id)
);

CREATE TABLE ReviewerExpertiese(
Conference VARCHAR(32),
id int(11),
Tag VARCHAR(32),
Expertiese CHAR(1),
FOREIGN KEY(Conference) REFERENCES ConferenceList(Conference),
FOREIGN KEY(id) REFERENCES ConferenceMemberList(id)
);

CREATE TABLE DocumentStorage(
DocumentNum CHAR(5),
DocumentTitle VARCHAR(32),
Conference VARCHAR(32),
Author int(11),
Chair int(11),
DocumentLocation VARCHAR(64),
AverageScore CHAR(1),
PRIMARY KEY(DocumentNum),
FOREIGN KEY(Conference) REFERENCES ConferenceList(Conference),
FOREIGN KEY(Author) REFERENCES ConferenceMemberList(id),
FOREIGN KEY(Chair) REFERENCES ConferenceMemberList(id)
);

CREATE TABLE DocumentTags(
DocumentNum VARCHAR(32),
Tag VARCHAR(16),
FOREIGN KEY(DocumentNum) REFERENCES DocumentStorage(DocumentNum)
);

CREATE TABLE DocumentReviewer(
DocumentNum VARCHAR(32),
Reviewer int(11),
FOREIGN KEY(DocumentNum) REFERENCES DocumentStorage(DocumentNum),
FOREIGN KEY(Reviewer) REFERENCES ConferenceMemberList(id)
);

CREATE TABLE ReviewStorage(
ReviewNum CHAR(5),
DocumentNum CHAR(5),
Reviewer int(11),
DateOfPost DATE,
TimeOfPost TIME,
Review VARCHAR(8192),
Score CHAR(1),
Expertiese CHAR(1),
PRIMARY KEY(ReviewNum),
FOREIGN KEY(DocumentNum) REFERENCES DocumentStorage(DocumentNum),
FOREIGN KEY(Reviewer) REFERENCES ConferenceMemberList(id)
);

CREATE TABLE CommentStorage(
CommentNum CHAR(5),
ReviewNum CHAR(5),
DocumentNum CHAR(5),
id int(11),
DateOfPost DATE,
TimeOfPost TIME,
Comment VARCHAR(8192),
PRIMARY KEY(CommentNum),
FOREIGN KEY(DocumentNum) REFERENCES DocumentStorage(DocumentNum),
FOREIGN KEY(id) REFERENCES ConferenceMemberList(id)
);

CREATE TABLE ChatStorage(
ChatNum CHAR(5),
DocumentNum CHAR(5),
id int(11),
DateOfPost DATE,
TimeOfPost TIME,
Chat VARCHAR(8192),
PRIMARY KEY(ChatNum),
FOREIGN KEY(DocumentNum) REFERENCES DocumentStorage(DocumentNum),
FOREIGN KEY(id) REFERENCES ConferenceMemberList(id)
);

CREATE TABLE Conflict(
Conference VARCHAR(32),
DocumentNum VARCHAR(5),
Declarer int(11),
Accused int(11),
Reason VARCHAR(8192),
Resolved CHAR(1),
Action VARCHAR(8192),
FOREIGN KEY(Conference) REFERENCES ConferenceList(Conference),
FOREIGN KEY(Declarer) REFERENCES ConferenceMemberList(id),
FOREIGN KEY (Accused) REFERENCES ConferenceMemberList(id)
);

CREATE TABLE Preferences(
Reviewer int(11),
DocumentNum CHAR(5),
FOREIGN KEY(Reviewer) REFERENCES ConferenceMemberList(id),
FOREIGN KEY(DocumentNum) REFERENCES DocumentStorage(DocumentNum)
);